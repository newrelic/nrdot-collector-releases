name: "Get Successful Commit"
description: "Find the last successful commit on a branch where all checks passed"
inputs:
  github-token:
    description: "GitHub token for API access"
    required: false
    default: ${{ github.token }}
  branch:
    description: "Branch to check for successful commits"
    required: false
    default: "main"
outputs:
  sha:
    description: "SHA of the last successful commit"
    value: ${{ steps.get-commit.outputs.successful_sha }}
  short-sha:
    description: "Short SHA of the last successful commit"
    value: ${{ steps.get-commit.outputs.short_sha }}
  workflow-run-id:
    description: "Workflow run ID that created artifacts for this commit"
    value: ${{ steps.get-commit.outputs.workflow_run_id }}
runs:
  using: "composite"
  steps:
    - name: Get Last Successful Commit
      id: get-commit
      shell: bash
      run: |
        echo "Finding last successful CI workflow run on ${{ inputs.branch }}..."
        echo "Repository: ${{ github.repository }}"

        # Get the most recent successful CI workflow run on the branch
        echo "=== Searching for successful CI workflows ==="
        workflow_data=$(gh api "/repos/${{ github.repository }}/actions/runs" \
          -X GET \
          --field branch="${{ inputs.branch }}" \
          --field status="completed" \
          --field conclusion="success" \
          --field per_page="50" \
          --jq '.workflow_runs[] | select(.name == "ðŸ”„ CI | PR / Merge") | {id, head_sha, conclusion}' 2>&1 \
          | head -1)

        echo "Raw workflow_data result: '$workflow_data'"
        workflow_run_id=$(echo "$workflow_data" | jq -r '.id')
        sha=$(echo "$workflow_data" | jq -r '.head_sha')
        short_sha=${sha:0:7}
        
        echo "successful_sha=$sha" >> $GITHUB_OUTPUT
        echo "short_sha=$short_sha" >> $GITHUB_OUTPUT
        echo "workflow_run_id=$workflow_run_id" >> $GITHUB_OUTPUT
        echo "âœ… Found successful commit: $short_sha (workflow run: $workflow_run_id)"
      env:
        GH_TOKEN: ${{ inputs.github-token }}
