name: ðŸ§© CI Snapshot CLI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for tag metadata
          sparse-checkout: cmd/nrdot-collector-builder

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "~1.24"

      - name: Tidy go.mod files
        run: go mod tidy

      - name: Run tests
        run: |
          set +e
          go test ./...
          echo "Ignoring test failures for CI build preview."
        working-directory: cmd/nrdot-collector-builder

      - name: Login to Docker
        uses: docker/login-action@v3
        if: ${{ env.ACT }}
        with:
          registry: docker.io
          username: ${{ secrets.OTELCOMM_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.OTELCOMM_DOCKER_HUB_PASSWORD }}

      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - name: Publish alpha with GoReleaser
        id: goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: --snapshot --clean
          workdir: cmd/nrdot-collector-builder
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitHub Container Registry for manifests
        uses: docker/login-action@v3
        if: ${{ !env.ACT }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract and Publish Docker Manifests
        if: ${{ !env.ACT && (github.ref_name == 'main' && github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(echo '${{ steps.goreleaser.outputs.metadata }}' | jq -r '.version')

          # Extract Docker image names and digests
          DOCKER_IMAGES=$(docker image ls --format "{{.Repository}}:{{.Tag}}" | grep "$GITHUB_REPOSITORY/nrdot-collector-builder:$VERSION" | tr '\n' ' ')

          echo $DOCKER_IMAGES | xargs -d ' ' -I{} -n1 sh -c "docker push {}"
          docker manifest create ghcr.io/$GITHUB_REPOSITORY/nrdot-collector-builder:$VERSION $(echo $DOCKER_IMAGES)
          docker manifest push ghcr.io/$GITHUB_REPOSITORY/nrdot-collector-builder:$VERSION
