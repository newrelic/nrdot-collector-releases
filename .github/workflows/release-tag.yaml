name: 🏷️ Release | Tag
on:
  workflow_run:
    workflows: ["🔄 CI | PR / Merge"]
    types:
      - completed
    branches: [main]
jobs:
  setup-e2e:
    name: Setup E2E Gating
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (sparse)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout: |
            .github/actions
            scripts
            distributions
      - name: Discover Distributions
        id: discover
        uses: ./.github/actions/discover-distributions
      - name: Set Outputs
        id: set-outputs
        run: |
          version=$(./scripts/get-version.sh)
          if git rev-parse "$version" >/dev/null 2>&1; then
            echo "Tag already exists."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag does not exist."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
    outputs:
      distributions: ${{ steps.discover.outputs.distributions }}
      version: ${{ steps.set-outputs.outputs.version }}
      exists: ${{ steps.set-outputs.outputs.exists }}
  e2e-gate:
    name: E2E Gate (${{ matrix.distribution }}${{ matrix.fips && ' - FIPS' || '' }})
    # Only run if upstream CI succeeded
    if: ${{ needs.setup-e2e.outputs.exists == 'false' && github.event.workflow_run.conclusion == 'success' }}
    needs: setup-e2e
    strategy:
      fail-fast: false
      matrix:
        distribution: ${{ fromJson(needs.setup-e2e.outputs.distributions) }}
        fips: [false, true]
    uses: ./.github/workflows/deploy-and-e2e.yaml
    with:
      ref: ${{ github.sha }}
      distro: ${{ matrix.distribution }}
      fips: ${{ matrix.fips }}
      execute_destroy: true
    secrets:
      aws_access_key_id: ${{ secrets.OTELCOMM_AWS_TEST_ACC_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.OTELCOMM_AWS_TEST_ACC_SECRET_ACCESS_KEY }}
      aws_account_id: ${{ secrets.OTELCOMM_AWS_TEST_ACC_ACCOUNT_ID }}
      nr_backend_url: ${{ secrets.NR_STAGING_BACKEND_URL }}
      nr_ingest_key: ${{ secrets.OTELCOMM_NR_INGEST_KEY }}
      nr_api_key: ${{ secrets.OTELCOMM_NR_API_KEY }}
      nr_account_id: ${{ secrets.OTELCOMM_NR_TEST_ACCOUNT_ID }}
      nr_api_base_url: ${{ secrets.NR_STAGING_API_BASE_URL }}
  tag-release:
    runs-on: ubuntu-latest
    # Only run if all E2E gate jobs passed
    needs: [e2e-gate, setup-e2e]
    concurrency:
      group: tag-release-${{ needs.setup-e2e.outputs.version }}
      cancel-in-progress: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for tag metadata
          token: ${{ secrets.RELEASE_TOKEN }} # Uses a PAT to ensure subsequent workflows get triggered
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.OTELCOMM_BOT_GPG_PRIVATE_KEY_BASE64 }}
          passphrase: ${{ secrets.OTELCOMM_BOT_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true          
      - name: Create and push tag
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          git tag -s -a "${{ needs.setup-e2e.outputs.version }}" -m "Release version ${{ needs.setup-e2e.outputs.version }}"
          git push origin "${{ needs.setup-e2e.outputs.version }}"
