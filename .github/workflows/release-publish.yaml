name: 🏷️ Release | Publish

on:
  release:
    types: 
      - published

env:
  REGISTRY: ${{ secrets.OTELCOMM_AWS_TEST_ACC_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

jobs:
  tag-latest:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution:
          - nrdot-collector-host
          - nrdot-collector-k8s

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required for tag metadata

      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.OTELCOMM_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.OTELCOMM_DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.OTELCOMM_AWS_TEST_ACC_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OTELCOMM_AWS_TEST_ACC_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ secrets.OTELCOMM_AWS_TEST_ACC_ACCOUNT_ID }}:role/resource-provisioner
          role-skip-session-tagging: true

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY}}/${{ matrix.distribution }}

      - name: Copy Docker Manifest from ECR to Docker Hub
        run: |
          version="${{ github.event.release.tag_name }}"
          image_name="${{ env.REGISTRY }}/${{ matrix.distribution }}"

          if [ -z "$version" ]; then
            echo "Error: version is empty"
            exit 1
          fi

          if ! docker manifest inspect "${image_name}:${version}" > /dev/null 2>&1; then
            echo "Error: Docker manifest for ${image_name}:${version} does not exist"
            exit 1
          fi

          docker buildx imagetools create \
            --tag "newrelic/${{ matrix.distribution }}:${version}" \
            --tag "newrelic/${{ matrix.distribution }}:latest" \
            "${image_name}:${version}"
