name: ðŸ§© Terraform
on:
  workflow_call:
    inputs:
      branch:
        description: "Branch to run the workflow on"
        type: string
        required: true
      tf_work_subdir:
        description: "Subdir of ./test/terraform/ to execute tf in. Used to separate different tf use cases"
        type: string
        required: true
      workspace:
        description: "Terraform workspace to use"
        type: string
        required: false
        default: default
      execute_plan:
        description: "Whether to run `terraform plan` or not"
        type: boolean
        required: false
        default: false
      execute_apply:
        description: "Whether to run `terraform apply` or not"
        type: boolean
        required: false
        default: false
      execute_plan_destroy:
        description: "Whether to run `terraform plan -destroy` or not"
        type: boolean
        required: false
        default: false
      execute_destroy:
        description: "Whether to run `terraform destroy` or not"
        type: boolean
        required: false
        default: false
      tf_log:
        description: "Terraform log level (TRACE, DEBUG, INFO, WARN or ERROR)"
        type: string
        required: false
        default: "INFO"
      distro:
        description: "List of distributions to test"
        type: string
        required: false
        default: "nrdot-collector-host"
    secrets:
      aws_access_key_id:
        description: "AWS credentials for tf with permission to assume resource-provider"
        required: true
      aws_secret_access_key:
        description: "AWS credentials for tf with permission to assume resource-provider"
        required: true
      aws_account_id:
        description: "AWS account for test purposes with existing role resource-provider"
        required: true
jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: true
      TF_CLI_ARGS: "-no-color -input=false"
      TF_LOG: ${{ inputs.tf_log }}
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
      TF_VAR_aws_account_id: ${{ secrets.aws_account_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
      - name: Terraform Setup & Workspace
        uses: ./.github/actions/terraform-setup
        with:
          terraform_version: 1.9.8
          aws_account_id: ${{ secrets.aws_account_id }}
          working_directory: ./test/terraform/${{ inputs.tf_work_subdir }}
          workspace: ${{ inputs.workspace }}
      - name: Terraform Plan
        if: ${{ inputs.execute_plan }}
        working-directory: ./test/terraform/${{ inputs.tf_work_subdir }}
        run: terraform plan
      - name: Terraform Apply
        if: ${{ inputs.execute_apply }}
        working-directory: ./test/terraform/${{ inputs.tf_work_subdir }}
        run: terraform apply -auto-approve
      - name: Terraform Plan Destroy
        if: ${{ inputs.execute_plan_destroy }}
        working-directory: ./test/terraform/${{ inputs.tf_work_subdir }}
        run: terraform plan -destroy
      - name: Terraform Destroy
        if: ${{ inputs.execute_destroy }}
        working-directory: ./test/terraform/${{ inputs.tf_work_subdir }}
        run: terraform destroy -auto-approve
