name: Prerelease

on:
  release:
    types:
      - prereleased
    tags:
      - '*'

jobs:
  prerelease:
    name: Pre-release

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set and validate distribution name and version
        run: .github/workflows/scripts/set_version.sh

      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          check-latest: true

      - name: Generate distribution sources
        run: make generate-sources

      - name: Log into Docker.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}

      - name: Build binaries & packages with GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --rm-dist --timeout 2h
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
          GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
          GPG_MAIL: 'infrastructure-eng@newrelic.com'

  # Artifacts not used - keep in place as a test for publish process until we have something more stable
  publishing-to-s3:
    name: Publish artifacts into s3 staging bucket
    uses: ./.github/workflows/component_publish.yml
    needs: [prerelease]
    secrets:
      DOCKER_HUB_ID: ${{ secrets.OHAI_DOCKER_HUB_ID }}
      DOCKER_HUB_PASSWORD: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
      GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
      AWS_ACCESS_KEY_ID: ${{ secrets.OHAI_AWS_ACCESS_KEY_ID_STAGING }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.OHAI_AWS_SECRET_ACCESS_KEY_STAGING }}
      AWS_ROLE_ARN: ${{ secrets.OHAI_AWS_ROLE_ARN_STAGING }}
      AWS_ROLE_SESSION_NAME: ${{ secrets.OHAI_AWS_ROLE_SESSION_NAME_STAGING }}
    with:
      ACCESS_POINT_HOST: "staging"
      SCHEMA_BRANCH: "main"
      RUN_ID: ${{ github.run_id }}
      TAG: ${{ github.event.release.tag_name }}
      AWS_S3_BUCKET_NAME: "nr-downloads-ohai-staging"
      AWS_S3_LOCK_BUCKET_NAME: "onhost-ci-lock-staging"
      ASSETS_TYPE: "all"
