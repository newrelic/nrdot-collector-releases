name: ðŸ”„ CI | PR / Merge

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup Workflow
    runs-on: ubuntu-latest
    outputs:
      distributions: ${{ steps.discover.outputs.distributions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/actions
            distributions/*/manifest.yaml
          sparse-checkout-cone-mode: false

      - name: Discover Distributions
        id: discover
        uses: ./.github/actions/discover-distributions

  build:
    name: Build & Validate (${{ matrix.distribution }}${{ matrix.fips && ' - FIPS' || '' }})
    needs: setup
    strategy:
      matrix:
        fips: [false, true]
        distribution: ${{ fromJson(needs.setup.outputs.distributions) }}
    uses: ./.github/workflows/ci-base.yaml
    with:
      distribution: ${{ matrix.distribution }}
      fips: ${{ matrix.fips }}
      publish: ${{ github.ref_name == 'main' && github.event_name == 'push' }}
      # namespace by distro to avoid issues with cleanup (distro 1 still running tests while distro 2 cleans up cluster)
      test_cluster_name: "${{ matrix.distribution }}-${{ github.run_id }}-${{ github.run_attempt }}"
    secrets:
      docker_hub_username: ${{ secrets.OTELCOMM_DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.OTELCOMM_DOCKER_HUB_PASSWORD }}
      gpg_private_key: ${{ secrets.OTELCOMM_GPG_PRIVATE_KEY_BASE64 }}
      gpg_passphrase: ${{ secrets.OTELCOMM_GPG_PASSPHRASE }}
      registry: "newrelic"
      nr_backend_url: ${{ secrets.NR_STAGING_BACKEND_URL }}
      nr_ingest_key: ${{ secrets.OTELCOMM_NR_INGEST_KEY }}
      nr_account_id: ${{ secrets.OTELCOMM_NR_TEST_ACCOUNT_ID }}
      nr_api_key: ${{ secrets.OTELCOMM_NR_API_KEY }}

  terraform:
    uses: ./.github/workflows/terraform.yaml
    if: ${{ !github.event.act && github.event.pull_request.user.login != 'dependabot[bot]' }}
    with:
      branch: ${{ github.ref }}
      tf_work_subdir: permanent
      execute_plan: true
      # apply only after merge to main
      execute_apply: ${{ github.ref_name == 'main' && github.event_name == 'push' }}
    secrets:
      aws_access_key_id: ${{ secrets.OTELCOMM_AWS_TEST_ACC_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{secrets.OTELCOMM_AWS_TEST_ACC_SECRET_ACCESS_KEY}}
      aws_account_id: ${{ secrets.OTELCOMM_AWS_TEST_ACC_ACCOUNT_ID }}
