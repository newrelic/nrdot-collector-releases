version: 2
project_name: nrdot-collector-releases
release:
  draft: true
  use_existing_draft: true
  disable: "false"
builds:
  - id: nrdot-collector-host-fips
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    dir: _build-fips
    binary: nrdot-collector-host-fips
    ldflags:
      - -w
      - -linkmode external
      - -extldflags '-static'
    tags:
      - netgo
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=1
      - GOEXPERIMENT=boringcrypto
    overrides:
      - goos: linux
        goarch: amd64
        env:
          - CC=x86_64-linux-gnu-gcc
          - CXX=x86_64-linux-gnu-g++
      - goos: linux
        goarch: arm64
        env:
          - CC=aarch64-linux-gnu-gcc
          - CXX=aarch64-linux-gnu-g++
nfpms:
  - file_name_template: '{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{- if not (eq (filter .ConventionalFileName "\\.rpm$") "") }}{{- replace .Arch "amd64" "x86_64" }}{{- else }}{{- .Arch }}{{- end }}{{- with .Arm }}v{{ . }}{{- end }}{{- with .Mips }}_{{ . }}{{- end }}{{- if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{- end }}'
    package_name: nrdot-collector-host-fips
    contents:
      - src: nrdot-collector-host-fips.service
        dst: /lib/systemd/system/nrdot-collector-host-fips.service
      - src: nrdot-collector-host-fips.conf
        dst: /etc/nrdot-collector-host-fips/nrdot-collector-host-fips.conf
        type: config|noreplace
      - src: config.yaml
        dst: /etc/nrdot-collector-host-fips/config.yaml
        type: config
    scripts:
      preinstall: preinstall.sh
      postinstall: postinstall.sh
      preremove: preremove.sh
    rpm:
      signature:
        key_file: '{{ .Env.GPG_KEY_PATH }}'
    deb:
      signature:
        key_file: '{{ .Env.GPG_KEY_PATH }}'
    overrides:
      rpm:
        dependencies:
          - /bin/sh
    id: nrdot-collector-host-fips
    ids:
      - nrdot-collector-host-fips
    formats:
      - deb
      - rpm
    maintainer: New Relic <otelcomm-team@newrelic.com>
    description: NRDOT Collector - nrdot-collector-host-fips
    license: Apache 2.0
snapshot:
  version_template: '{{ incpatch .Version }}-SNAPSHOT-{{.ShortCommit}}'
checksum:
  name_template: '{{ .ArtifactName }}.sum'
  algorithm: sha256
  split: true
dockers:
  - goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    image_templates:
      - '{{ .Env.REGISTRY }}/nrdot-collector-host:{{ .Version }}-fips-amd64'
    extra_files:
      - config.yaml
    build_flag_templates:
      - --pull
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
      - --label=org.opencontainers.image.licenses=Apache-2.0
      - --build-arg=DIST_NAME=nrdot-collector-host-fips
    use: buildx
  - goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    image_templates:
      - '{{ .Env.REGISTRY }}/nrdot-collector-host:{{ .Version }}-fips-arm64'
    extra_files:
      - config.yaml
    build_flag_templates:
      - --pull
      - --platform=linux/arm64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
      - --label=org.opencontainers.image.licenses=Apache-2.0
      - --build-arg=DIST_NAME=nrdot-collector-host-fips
    use: buildx
docker_manifests:
  - name_template: '{{ .Env.REGISTRY }}/nrdot-collector-host:{{ .Version }}-fips'
    image_templates:
      - '{{ .Env.REGISTRY }}/nrdot-collector-host:{{ .Version }}-fips-amd64'
      - '{{ .Env.REGISTRY }}/nrdot-collector-host:{{ .Version }}-fips-arm64'
blobs:
  - bucket: nr-releases
    provider: s3
    region: us-east-1
    directory: nrdot-collector-releases/nrdot-collector-host-fips/{{ .Version }}
changelog:
  disable: "true"
signs:
  - args:
      - --batch
      - -u
      - '{{ .Env.GPG_FINGERPRINT }}'
      - --output
      - ${signature}
      - --detach-sign
      - --armor
      - ${artifact}
    signature: ${artifact}.asc
    artifacts: all
