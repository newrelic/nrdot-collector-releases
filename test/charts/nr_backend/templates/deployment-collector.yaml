{{- if .Values.image.repository | hasSuffix "k8s" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: &app nrdot-collector-deployment
  labels:
    app: *app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: *app
  template:
    metadata:
      labels:
        app: *app
    spec:
      serviceAccountName: read-k8s-api-account
      containers:
        {{- if and (.Values.image.repository | hasSuffix "k8s") .Values.demoService.enabled}}
        - name: adservice
          image: otel/demo:2.0.2-ad
          env:
            - name: AD_PORT
              value: "8080"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://localhost:4318
            - name: OTEL_SERVICE_NAME
              value: adservice
          ports:
            - containerPort: 8080
        {{- end }}
        - name: *app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          args: ["--config", "/etc/nrdot-collector-k8s/config-deployment.yaml"]
          ports:
            - name: health
              containerPort: 13133
            - name: otlp-http
              containerPort: 4318
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: collector-secrets
                  key: backendUrl
            - name: NEW_RELIC_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: collector-secrets
                  key: nrIngestKey
            # used to populate k8s.cluster.name
            - name: K8S_CLUSTER_NAME
              value: {{ .Values.clusterName }}
{{- end }}
